#version 330 core
in vec2 vUv0;
uniform sampler2D textura1;
uniform float FB;
uniform vec4 InColor;
uniform vec4 OutColor1;
uniform vec4 OutColor2;
uniform float intLuz;
const int MaxIter = 500;
out vec4 fFragColor;

void main(){
	vec4 color1 = vec4(texture2D(textura1, vUv0)) * intLuz; //Luz

	float Creal = vUv0.s -1.5;
	float Cimag = vUv0.t;
	float real = Creal; //Zr
	float imag = Cimag; //Zi
	float z2 = 0.0; //Z^2
	int iter = 0;
	float tempreal = 0.0;
	while (iter < MaxIter && z2 < 4.0){
		tempreal = real;
		real = (tempreal * tempreal) - (imag * imag) + Creal;
		imag = 2.0 * tempreal * imag +Cimag;
		z2 = (real* real)+ (imag*imag);
		iter = iter + 1;
	}
	vec4 color = InColor;
	if(z2 >4.0)
		color = mix(OutColor1, OutColor2 , fract(float(iter)*0.04));
	vec4 colorF = mix(color, color1, FB); //(1‐FB).C1+FB.C2
	fFragColor = colorF;
}